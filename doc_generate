#!/bin/bash

# Configuration
SCALE="70"
GIFDELAY="240"
TERMINAL=termite

EXECDIR=$(dirname $0)

Slugify() {
	echo "$1" | iconv -t ascii//TRANSLIT | sed -r s/[~\^]+//g | sed -r s/[^a-zA-Z0-9]+/_/g | sed -r s/^-+\|-+$//g | tr A-Z a-z
}

ExecuteCMD() {
	if [ "$1" = "urxvt" ]; then
		urxvt -e sh -c "$2"
	else
		termite -e "sh -c '$2'"
	fi
}

# Take Screenshot
TakeScreenshot() {
	mkdir -p "$EXECDIR/screenshot"

	## Get parameters
	#ID=$(ls "$EXECDIR/screenshot/" | wc -l)
	#ID=$(printf "%03d" $ID)
	TITLE=$(Slugify "$1")

	NID=$(dunstify -p "$1" "$2")
	sleep 1
	if [ ! -e "$EXECDIR/screenshot/${TITLE}.png" ]; then
		# Screenshot
		if [ $SCALE -eq 100 ]; then
			maim -u "$EXECDIR/screenshot/${TITLE}.png"
		else
			maim -u "$EXECDIR/screenshot/${TITLE}_orig.png"
			convert "$EXECDIR/screenshot/${TITLE}_orig.png" -scale "${SCALE}%" "$EXECDIR/screenshot/${TITLE}.png"
			rm "$EXECDIR/screenshot/${TITLE}_orig.png"
		fi
	fi
	dunstify -C $NID
}

# Add last screenshot to section
AddScreenshotToDoc() {
	SECTION="$1"
	TITLE="$2"
	MESS="$3"
	SCR=$(find "$EXECDIR/screenshot/" -name "*.png" -printf "%T@ %p\n" | sort -n | awk '{ print $2}' | tail -n1)
	SCR=${SCR/$EXECDIR\//IMGDIR}

	mkdir -p "$EXECDIR/doc/"
	if [ ! -e "$EXECDIR/doc/$SECTION.md" ]; then
		echo "| Description  | Command | Screenshot |" >"$EXECDIR/doc/$SECTION.md"
		echo "| ----- | ---- | ---- |" >>"$EXECDIR/doc/$SECTION.md"
	fi

	#cp "$SCR" "$EXECDIR/doc/$SECTION/$TITLE.png"
	echo "| $TITLE | $MESS | ![$TITLE]($SCR)  |" >>"$EXECDIR/doc/$SECTION.md"
}

GenerateDoc() {
	README="$EXECDIR/README.md"
	echo "## bspwm-doc" >$README
	echo "" >>$README
	echo "The documentation generator for bspwm project" >>$README
	echo "" >>$README
	echo "![Animated version](screenshot/animated.gif)" >>$README

	find "$EXECDIR/doc/" -name "*.md" -printf "%T@ %p\n" | sort -n | cut -d'/' -f3 | while read file; do
		TITLE=${file/\.md$/}
		echo "" >>$README
		echo "### $TITLE" >>$README
		echo "" >>$README
		cat "$EXECDIR/doc/$file" >>$README
	done

	echo "" >>$README
	echo "Generated by [bspwm-doc](https://github.com/badele/bspwm-doc)" >>$README

	# Replace path
	sed -i -e 's/IMGDIR//g' $README
	find "$EXECDIR/doc" -name "*.md" -exec sed -i -e 's/IMGDIR/..\//g' {} \;
}

# Close all windows on current desktop
CloseAllWindows() {
	for n in $(bspc query -N -d); do
		bspc node -f $n -c # Remove Node (Window)
	done
}

rm -rf "$EXECDIR/doc"
rm -rf "$EXECDIR/screenshot"

# Kill all bars (empty desktop)
pkill polybar
for i in 1 2 3; do
	focusdesktop $i
	CloseAllWindows
done
TakeScreenshot "Empty desktop"

# Initialize desktop
bspc monitor $(bspc query -M | awk NR==1) -d 1.social 2.music 3.term 4.misc 5.misc
launch_bars
TakeScreenshot "Initialized desktop & bars" ""
AddScreenshotToDoc "Window-Creation-Positionement" "Initial" ""

# Desktop selection
#AddNewSection "Windows manipulations" "Desktop Selection"
#for i in 3 2 1; do
#    focusdesktop $i
#    TakeScreenshot "Focus on Desktop #$i"  "focusdesktop $i"
#done

# "Windows manipulations" "Windows creation"
focusdesktop 1
#$TERMINAL -e sh -c "tpal art pacman && tpal art spaceinvaders && tpal art yinyang && tpal minimat && tpal brightness && tpal rainbow ; read" &
ExecuteCMD "urxvt" "tpal art pacman && tpal art spaceinvaders && tpal art yinyang && tpal minimat && tpal brightness && tpal rainbow ; read" &
TakeScreenshot "Launch termpalette" "$TERMINAL -e sh -c tpal art pacman"
AddScreenshotToDoc "Window-Creation-Positionement" "Window creation(Launch ncmpcpp)" "$TERMINAL -e sh -c ncmpcpp"

bspc node -p north
TakeScreenshot "North Window preselection" ""
AddScreenshotToDoc "Window-Creation-Positionement" "North Window preselection" "bspc node -p north"

#$TERMINAL -e sh -c "neofetch --ascii_distro manjaro;read" &
ExecuteCMD "urxvt" "neofetch --ascii_distro manjaro;read" &
TakeScreenshot "Launch neofetch" "$TERMINAL -e sh -c neofetch"
AddScreenshotToDoc "Window-Creation-Positionement" "Launch neofetch" "$TERMINAL -e sh -c neofetch --ascii_distro manjaro"

bspc node -p east
TakeScreenshot "east Window preselection" "bspc node -p east"
AddScreenshotToDoc "Window-Creation-Positionement" "east presel" "bspc node -p east"

#$TERMINAL -e sh -c "tty-clock -cs" &
ExecuteCMD "urxvt" "tty-clock -cs" &
TakeScreenshot "Launch tty-clock" ""
AddScreenshotToDoc "Window-Creation-Positionement" "Launch tty-clock" "$TERMINAL -e sh -c tty-clock"
AddScreenshotToDoc "Window-Mouvement-Resize" "Initial" ""

for i in 1 2 3; do
	bspwm_resize.sh north 50
	TakeScreenshot "Resize step #$i" ""
	AddScreenshotToDoc "Window-Mouvement-Resize" "Resize step #$i" "bspwm_resize.sh north 50"
done
AddScreenshotToDoc "Window-Node #3" "Initial" ""

focusmover south
TakeScreenshot "focusmover south" ""
AddScreenshotToDoc "Window-Node #3" "south windows focus" "focusmover south"

bspc node -p east -i
TakeScreenshot "windows ghost presel" "bspc node -p east -i"
AddScreenshotToDoc "Window-Node #3" "windows ghost presel" "bspc node -p east -i"

# TODO: "Windows Creation" "Desktop Preselection"
# bspc node -p \~{west,south,north,east} -i
#AddNewSection "Windows Creation" "Direction Preselection"
#TakeScreenshot "super+Return"  "#3 $TERMINAL"

convert -delay ${GIFDELAY} -loop 0 $(find "$EXECDIR/screenshot/" -name *.png -printf "%T@ %p\n" | sort -n | awk '{ print $2}' | xargs -r0 echo) "$EXECDIR/screenshot/animated.gif"
#convert animated.gif -fuzz 5% -layers Optimize compressed.gif

GenerateDoc

focusdesktop 3
